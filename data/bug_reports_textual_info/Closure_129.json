{
    "id": 937,
    "status": "Fixed",
    "summary": "Casting a function before calling it produces bad code and breaks plugin code",
    "labels": [
        "Type-Defect",
        "Priority-Medium"
    ],
    "stars": 0,
    "commentCount": 3,
    "comments": [
        {
            "id": 0,
            "commenterId": 177012085138132463,
            "content": "1. Compile this code with ADVANCED_OPTIMIZATIONS:\r\nconsole.log( /** @type {function(!string):!string} */ ((new window.ActiveXObject( 'ShockwaveFlash.ShockwaveFlash' ))['GetVariable'])( '$version' ) );\r\n\r\nproduces:\r\n\r\n'use strict';console.log((0,(new window.ActiveXObject(&quot;ShockwaveFlash.ShockwaveFlash&quot;)).GetVariable)(&quot;$version&quot;));\r\n\r\n2. Compare with this code:\r\nconsole.log( /** @type {!string} */ ((new window.ActiveXObject( 'ShockwaveFlash.ShockwaveFlash' ))['GetVariable']( '$version' )) )\r\n\r\nproduces:\r\n\r\n'use strict';console.log((new window.ActiveXObject(&quot;ShockwaveFlash.ShockwaveFlash&quot;)).GetVariable(&quot;$version&quot;));\r\n\r\n\r\nNotice the (0,...) wrapping around the GetVariable function in the first example. This causes the call to fail in every browser (this code is IE-only but it's just for a minimal example). The second version produces a warning that the type of GetVariable could not be determined (I enabled type warnings), and it wouldn't be possible to define these in an externs file without making a horrible mess.\r\n\r\nThis applies to all cases where functions are cast, but only causes problems (other than bloat) with plugins like this. It seems to serve no purpose whatsoever, so I assume it is a bug.\r\n\r\nRunning on a mac, not sure what version but it reports Built on: 2013/02/12 17:00, so will have been downloaded about that time.",
            "timestamp": 1362505862,
            "attachments": []
        },
        {
            "id": 1,
            "commenterId": -5060162230523776870,
            "content": "Well drat. This seems likely that this is a side effect of the introduction of the CAST node to the AST.  I'll take a look.",
            "timestamp": 1362585536,
            "attachments": []
        },
        {
            "id": 2,
            "commenterId": -8769171937076622550,
            "content": "This issue was closed by revision 79a8906570f4.",
            "timestamp": 1363798292,
            "attachments": []
        }
    ]
}