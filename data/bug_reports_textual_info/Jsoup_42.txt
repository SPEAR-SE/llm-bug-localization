

When there is input:
<input type="checkbox" name="testCheckBox" checked="checked" />

The "formData()" of FormElement's ignores that default value which should be "on" as submitted by browsers.
HTML fragment:
<html>
    <head>
        <title>Test</title>
    </head>

    <body>

    <form name="myForm" method="POST">
        <input type="checkbox" name="testCheckBox" checked="checked" /> Something<br/>

        <input type="submit" value="Submit" />
    </form>

    </body>
</html>

When submiting from Firefox it sends to sever: testCheckBox=on
Java code:
    public static void main(String[] args)
    {
        final String html = "<html>\n"
                            + "    <head>\n"
                            + "        <title>Test</title>\n"
                            + "    </head>\n"
                            + "    \n"
                            + "    <body>\n"
                            + "\n"
                            + "    <form name=\"myForm\" method=\"POST\">\n"
                            + "        <input type=\"checkbox\" name=\"testCheckBox\" checked=\"checked\" /> Something<br/>\n"
                            + "\n"
                            + "        <input type=\"submit\" value=\"Submit\" />\n"
                            + "    </form>\n"
                            + "\n"
                            + "    </body>\n"
                            + "</html>";

        final Document document = Jsoup.parse(html);

        final FormElement formElement = (FormElement) document.select("form[name=myForm]").first();

        for (Connection.KeyVal keyVal : formElement.formData())
        {
            System.out.println(keyVal.key() + "=" + keyVal.value());
        }

    }

Output: testCheckBox=
Expected output: testCheckBox=on
Seems like Jsoup doesn't add default value which is sent by browsers. The "submit()" method from FormElement also uses "formData()" method to get form's submission parameters. By sending the empty String for checkbox the server acts as it's not checked when in fact it was checked.
Also while testing noticed that it doesn't check the checkbox'es at all. If there is checkbox with value, but not checked, it will get the value no matter what, for example:
        <input type="checkbox" name="textCheckBox2" value="testVal" /> 

This affects radio buttons as well. Not selected radion buttons should not be sent to server, but formData() add their values anyway.
I'm not sure if that's done on purpose, but submit() method will get wrong parameters for submission since not checked input value is not sent to server at all.
Moreover type button value and "disabled" inputs are not sent to server as well (by browsers).
Looked at the source, one extra else if before the final else in "formData()" method could solve this:
else if ("input".equals(el.tagName())) {
                // Not disabled? Ignore disabled inputs.
                if(!el.hasAttr("disabled")) {

                    // Deal with checkbox and radio (not checked should not be added to avoid sending to server)
                    if("checkbox".equals(el.attr("type")) || "radio".equals(el.attr("type"))) {

                        // Checked, but no value? Default should be "on".
                        if(el.hasAttr("checked") && !el.hasAttr("value")) {
                            data.add(HttpConnection.KeyVal.create(name, "on"));
                        } 
                        // Checked? Add it's value
                        else if(el.hasAttr("checked")) {
                            data.add(HttpConnection.KeyVal.create(name, el.val()));
                        }
                    } 
                    // Buttons should be ignored.
                    else if(!"button".equals(el.attr("type"))){
                        data.add(HttpConnection.KeyVal.create(name, el.val()));
                    }
                }
            }

One more thing. If form has multiple type submit inputs, only the clicked input's value should be sent to server, but I have no idea how this could be implemented. Sending all submit input's values can change the server's logic and be bad (result not as expected).



According to MDN, the value attribute is required when type=checkbox|radio. on is a default value used by most (all?) browsers when value is missing, but there's no official default.
I was writing some code for this issue, but then I saw that the formData method seems somewhat incomplete. For example, the disabled attribute is ignored and radio buttons should be included when checked only (and of course only a single value can be included when name is the same).
Should it be improved as a whole? Or just add the default value for check boxes?



I think it should be improved as a whole.
It should be similar as much as possible to standard browser behavior when submitting a form.
What's the point of "formData()" method (and submit() in "Connection" class since it uses the same "formData()") if it gets (sends) the wrong values. By sending wrong values the server's logic doesn't like / understand them and the form submission doesn't work at all.



I've implemented the "checked" attribute recently. Please feel free to make big changes to improve it.



Thanks for the report

