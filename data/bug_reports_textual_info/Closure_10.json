{
    "id": 821,
    "status": "Fixed",
    "summary": "Wrong code generated if mixing types in ternary operator",
    "labels": [
        "Type-Defect",
        "Priority-High"
    ],
    "stars": 0,
    "commentCount": 3,
    "comments": [
        {
            "id": 0,
            "commenterId": 675875141201202545,
            "content": "<b>What steps will reproduce the problem?</b>\n1. Use Google Closure Compiler to compile this code:\r\n\r\n    var a =(Math.random()&gt;0.5? '1' : 2 ) + 3 + 4;\r\n\r\nYou can either simple or advanced. It doesn't matter\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI'm seeing this as a result:\r\n    var a = (0.5 &lt; Math.random() ? 1 : 2) + 7;\r\n\r\nThis is obviously wrong as the '1' string literal got converted to a number, and 3+4 got combined into 7 while that's not ok as '1' + 3 + 4 = '134', not '17'.\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nSeems like this issue happens only when you are mixing types together. If both 1 and 2 are string literals or if they are both numbers it won't happen. I was also a little surprised to see this happening in simple mode as it actually breaks the behavior.",
            "timestamp": 1348222633,
            "attachments": []
        },
        {
            "id": 1,
            "commenterId": -5060162230523776870,
            "content": "Thank you for the report!",
            "timestamp": 1348242240,
            "attachments": []
        },
        {
            "id": 2,
            "commenterId": -7699928860083865744,
            "content": "This issue was closed by revision r2206.",
            "timestamp": 1348268314,
            "attachments": []
        }
    ]
}