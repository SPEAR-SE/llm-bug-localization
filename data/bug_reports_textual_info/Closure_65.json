{
    "id": 486,
    "status": "Fixed",
    "summary": "String escaping mishandles null byte",
    "labels": [
        "Type-Defect",
        "Priority-Medium"
    ],
    "stars": 0,
    "commentCount": 6,
    "comments": [
        {
            "id": 0,
            "commenterId": -5450212342862926778,
            "content": "<b>What steps will reproduce the problem?</b>\n1. Run:\r\nvar x = &quot;\\u00003&quot;; if (x.length &lt; 2) { alert(&quot;fail&quot;); } else { alert(&quot;win&quot;); }\r\n2. Compile and run\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n&quot;win&quot; is expected. &quot;fail&quot; is observed\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nr1167 on OS x 10.6\r\n\r\n<b>Please provide any additional information below.</b>\nThe problem is here: http://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/javascript/jscomp/CodeGenerator.java#1015\r\n\r\nHere's a patch that fixes it:\r\n$ svn diff\r\nIndex: src/com/google/javascript/jscomp/CodeGenerator.java\r\n===================================================================\r\n--- src/com/google/javascript/jscomp/CodeGenerator.java\t(revision 1167)\r\n+++ src/com/google/javascript/jscomp/CodeGenerator.java\t(working copy)\r\n@@ -1012,7 +1012,7 @@\r\n     for (int i = 0; i &lt; s.length(); i++) {\r\n       char c = s.charAt(i);\r\n       switch (c) {\r\n-        case '\\0': sb.append(&quot;\\\\0&quot;); break;\r\n+        case '\\0': sb.append(&quot;\\\\000&quot;); break;\r\n         case '\\n': sb.append(&quot;\\\\n&quot;); break;\r\n         case '\\r': sb.append(&quot;\\\\r&quot;); break;\r\n         case '\\t': sb.append(&quot;\\\\t&quot;); break;\r\n\r\nYou could also lookahead and output &quot;\\\\000&quot; only if the following char is 0-7 (octal valid) and otherwise output &quot;\\\\0&quot;. Is 2 bytes worth the complexity?",
            "timestamp": 1307668775,
            "attachments": []
        },
        {
            "id": 1,
            "commenterId": -5450212342862926778,
            "content": "This bug was introduced in r904 \"Special case the NUL character\"",
            "timestamp": 1307670950,
            "attachments": []
        },
        {
            "id": 2,
            "commenterId": -7699928860083865744,
            "content": "thanks for the patch.\r\n\r\nCan you sign a CLA so that we can accept patches from you? See this for more explanation:\r\nhttp://code.google.com/p/closure-compiler/source/browse/trunk/CONTRIBUTORS",
            "timestamp": 1308001533,
            "attachments": []
        },
        {
            "id": 3,
            "commenterId": -5450212342862926778,
            "content": "CLA email sent. I grant sheets@ashimaarts.com licensure privilege over the above patch.",
            "timestamp": 1308085575,
            "attachments": []
        },
        {
            "id": 4,
            "commenterId": 7366615844192858214,
            "content": "I accept full license rights to the above patch and submit the patch to Google under the aforementioned CLA.",
            "timestamp": 1308085647,
            "attachments": []
        },
        {
            "id": 5,
            "commenterId": -7699928860083865744,
            "content": "This issue was closed by revision r1179.",
            "timestamp": 1308173638,
            "attachments": []
        }
    ]
}