Exception when emitting code containing getters

Consider the following source code: http://trac.webkit.org/browser/trunk/Source/WebCore/inspector/front-end/Settings.js#L123\r
 \r
 Following exception fires unless I remove the \u0026quot;get name()\u0026quot; getter from the code.\r
 \r
 java.lang.RuntimeException: java.lang.IllegalStateException: Expected function but was call Reference node CALL 128 [free_call: 1] [source_file: Settings.js]\r
 \tat com.google.javascript.jscomp.Compiler.runCallable(Compiler.java:629)\r
 \tat com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:574)\r
 \tat com.google.javascript.jscomp.Compiler.compile(Compiler.java:556)\r
 \tat com.google.javascript.jscomp.Compiler.compile(Compiler.java:515)\r
 \tat com.google.javascript.jscomp.AbstractCommandLineRunner.doRun(AbstractCommandLineRunner.java:662)\r
 \tat com.google.javascript.jscomp.AbstractCommandLineRunner.run(AbstractCommandLineRunner.java:295)\r
 \tat com.google.javascript.jscomp.CommandLineRunner.main(CommandLineRunner.java:758)\r
 Caused by: java.lang.IllegalStateException: Expected function but was call Reference node CALL 128 [free_call: 1] [source_file: Settings.js]\r
 \tat com.google.javascript.jscomp.AstValidator$1.handleViolation(AstValidator.java:51)\r
 \tat com.google.javascript.jscomp.AstValidator.violation(AstValidator.java:763)\r
 \tat com.google.javascript.jscomp.AstValidator.validateNodeType(AstValidator.java:768)\r
 \tat com.google.javascript.jscomp.AstValidator.validateFunctionExpression(AstValidator.java:359)\r
 \tat com.google.javascript.jscomp.AstValidator.validateObjectLitGetKey(AstValidator.java:696)\r
 \tat com.google.javascript.jscomp.AstValidator.validateObjectLitKey(AstValidator.java:677)\r
 \tat com.google.javascript.jscomp.AstValidator.validateObjectLit(AstValidator.java:670)\r
 \tat com.google.javascript.jscomp.AstValidator.validateExpression(AstValidator.java:252)\r
 \tat com.google.javascript.jscomp.AstValidator.validateAssignmentExpression(AstValidator.java:603)\r
 \tat com.google.javascript.jscomp.AstValidator.validateExpression(AstValidator.java:219)\r
 \tat com.google.javascript.jscomp.AstValidator.validateExprStmt(AstValidator.java:476)\r
 \tat com.google.javascript.jscomp.AstValidator.validateStatement(AstValidator.java:126)\r
 \tat com.google.javascript.jscomp.AstValidator.validateScript(AstValidator.java:89)\r
 \tat com.google.javascript.jscomp.AstValidator.validateCodeRoot(AstValidator.java:79)\r
 \tat com.google.javascript.jscomp.AstValidator.process(AstValidator.java:63)\r
 \tat com.google.javascript.jscomp.PhaseOptimizer$PassFactoryDelegate.processInternal(PhaseOptimizer.java:273)\r
 \tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:250)\r
 \tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:168)\r
 \tat com.google.javascript.jscomp.Compiler.optimize(Compiler.java:1634)\r
 \tat com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:664)\r
 \tat com.google.javascript.jscomp.Compiler.access$000(Compiler.java:70)\r
 \tat com.google.javascript.jscomp.Compiler$1.call(Compiler.java:559)\r
 \tat com.google.javascript.jscomp.Compiler$1.call(Compiler.java:556)\r
 \tat com.google.javascript.jscomp.Compiler$2.run(Compiler.java:601)\r
 \tat java.lang.Thread.run(Thread.java:680)