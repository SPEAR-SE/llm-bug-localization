{
    "id": 726,
    "status": "Fixed",
    "summary": "Wrong argument count error not reported on this aliasing (on function with @this annotation)",
    "labels": [
        "Type-Defect",
        "Priority-Medium"
    ],
    "stars": 0,
    "commentCount": 6,
    "comments": [
        {
            "id": 0,
            "commenterId": -6289268304558982259,
            "content": "The following code (attached as test2-1.js) when compiled with:\r\njava -jar build/compiler.jar --compilation_level=ADVANCED_OPTIMIZATIONS --jscomp_error=accessControls --jscomp_error=checkTypes --jscomp_error=checkVars --jscomp_error=uselessCode --jscomp_off=globalThis --js ~/Desktop/test2.js \r\n\r\ncorrectly fails with:\r\n\r\n/Users/dolapo/Desktop/test2.js:28: ERROR - Function Person.prototype.getName: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).\r\n\r\nHowever, if the say function is modified such that this is aliased and the function is called within a setTimeout (test2-2.js), the error is not caught\r\n\r\n\r\n\r\n\r\n\r\ntest2-1.js:\r\nvar makeClass = function(protoMethods) {\r\n  var clazz = function() {\r\n    this.initialize.apply(this, arguments);\r\n  }\r\n  for (var i in protoMethods) {\r\n    clazz.prototype[i] = protoMethods[i];\r\n  }\r\n\r\n  return clazz;\r\n}\r\n\r\n/** @constructor */\r\nvar Person = function(name){};\r\nPerson = makeClass(/** @lends Person.prototype */ {\r\n  /** @this {Person} */\r\n  initialize: function(name) {\r\n    this.name = name;\r\n  },\r\n\r\n  /** @this {Person} */\r\n  getName: function() { return this.name; },\r\n\r\n  /**\r\n   * @param {string} message\r\n   * @this {Person}\r\n   */\r\n  say: function(message) {\r\n    window.console.log(this.getName(1) + ' says: ' + message);\r\n  }\r\n});\r\n\r\n\r\nvar joe = new Person('joe');\r\njoe.say('hi');\r\nvar jane = new Person('jane');\r\njane.say('hello');\r\n\r\n\r\n\r\ntest2-2.js:\r\n\r\nvar makeClass = function(protoMethods) {\r\n  var clazz = function() {\r\n    this.initialize.apply(this, arguments);\r\n  }\r\n  for (var i in protoMethods) {\r\n    clazz.prototype[i] = protoMethods[i];\r\n  }\r\n\r\n  return clazz;\r\n}\r\n\r\n/** @constructor */\r\nvar Person = function(name){};\r\nPerson = makeClass(/** @lends Person.prototype */ {\r\n  /** @this {Person} */\r\n  initialize: function(name) {\r\n    this.name = name;\r\n  },\r\n\r\n  /** @this {Person} */\r\n  getName: function() { return this.name; },\r\n\r\n  /**\r\n   * @param {string} message\r\n   * @this {Person}\r\n   */\r\n  say: function(message) {\r\n    // window.console.log(this.getName(1) + ' says: ' + message);\r\n    var self = this;\r\n    setTimeout(function() {\r\n      window.console.log(self.getName(1) + ' says: ' + message);\r\n    }, 500); \r\n  }\r\n});\r\n\r\n\r\nvar joe = new Person('joe');\r\njoe.say('hi');\r\nvar jane = new Person('jane');\r\njane.say('hello');",
            "timestamp": 1336852071,
            "attachments": [
                {
                    "id": 7260000000,
                    "fileName": "test2-1.js",
                    "fileSize": 725
                },
                {
                    "id": 7260000001,
                    "fileName": "test2-2.js",
                    "fileSize": 789
                }
            ]
        },
        {
            "id": 1,
            "commenterId": -5060162230523776870,
            "content": "Thank you for the report.",
            "timestamp": 1339176919,
            "attachments": []
        },
        {
            "id": 2,
            "commenterId": -7699928860083865744,
            "content": "",
            "timestamp": 1344023723,
            "attachments": []
        },
        {
            "id": 3,
            "commenterId": -7699928860083865744,
            "content": "This issue was closed by revision r2131.",
            "timestamp": 1344628714,
            "attachments": []
        },
        {
            "id": 4,
            "commenterId": 1328304962299559429,
            "content": "This issue was closed by revision r2132.",
            "timestamp": 1344628796,
            "attachments": []
        },
        {
            "id": 5,
            "commenterId": -7699928860083865744,
            "content": "This issue was closed by revision r2137.",
            "timestamp": 1344630055,
            "attachments": []
        }
    ]
}