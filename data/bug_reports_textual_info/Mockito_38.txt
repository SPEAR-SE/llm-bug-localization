


Changes Unknown when pulling 47a7016 on szpak:topic/releaseLabels into * on mockito:master*.



Btw, it was created as a PoC and wasn't test driven. Once it was converted into a separate project/plugin it would be useful to have better tests.



Hey,
This is very cool. I haven't looked at the code yet but it's looking so
nice!!!
Thanks!
On Wed, Sep 10, 2014 at 11:58 AM, Marcin Zajączkowski <
notifications@github.com> wrote:

Btw, it was created as a PoC and wasn't test driven. Once it was converted
into a separate project/plugin it would be useful to have better tests.
—
Reply to this email directly or view it on GitHub
#79 (comment).


Szczepan Faber
Core dev@gradle; Founder@mockito



Hey,
I was about to merge this but one thing picked my interest: "Documentation: 0". This is not quite true, there were many improvements to the documentation, but they weren't correctly managed via the ticketing system. In the result, it looks like we haven't touched the docs in 2 years :P
Marcin, can you update it so that the label is not shown if it contains no items?

I changed internally Improvement to Change to better give meaning of change, but it is done in a separate commit, so can be easily reverted/amended if you don't like it (or have a better name).

I see that you introduced a top level 'changes' element in the view, so it makes sense to model the 'Change', too. I'm not too fuzzed about it, but I'd like the release notes to not contain any 'changes'. Basically, I believe that 'changes' are not important. They are means to achieve things like, improving stuff. They are like 'implementation details'. So I'd rather the view and the model be something like:
improvements:
new features
enahancements
fixed bugs
documentation
other
This is not something we have to deal now, just wanted to share my view and maybe get your feedback.

I have to take a look why some labelled issues were ommited (in both mechanisms).

In order for the issue to be presented:

has hash-id in the commit message (or the commit 'notes'), like Generate change list separated by types using labels #79
is closed in github issue tracker (e.g. status 'closed').
the commit is within correct range (e.g. between previous and this release/HEAD).

Unless there is some bug :)




Changes Unknown when pulling ea6edd3 on szpak:topic/releaseLabels into * on mockito:master*.



I reworked my changes and adjusted model to that with Improvements at the top. I also removed displaying categories with no improvements.

Improvements: 25

Enhancements: 13

Improved the javadoc example of custom Answer implementation (#22)
Avoided classloader issue when testing in Eclipse plugins environment (#24)
Removed .java files from main mockito jar artifacts (#28)
Smarter constructor injection by choosing "biggest" constructor instead of the default one (#29)
Improve exception messages when user mocks a method declared on non-public parent (#90)
Deep stub style mocks can be serialized (#30)
Fixed the behavior of compareTo method of the mock objects (#32)
New "MockingDetails.getInvocations" method for inspecting what happened with the mock (#10)
Mock serialization/deserialization across classloader/JVM (#5)
Improved MockitoTestNGListener by making it reset argument captors before each test (#6)
Improve NoInteractionsWanted report to include the name of the mock (#63)
New "getArgumentAt" method for convenient implementation of custom Answers (#41)
New lightweight, stub-only mocks for scenarios where high performance is needed (#86)


Fixed bugs: 4

Ensure continuous deployment process does not produce "-dev" versions (#88)
Fix flaky test: TimeoutTest (#66)
Allow calling real implementation of jdk8 extension methods (#39)
Fixed DelegatingMethod.equals() so that it's easier to extend Mockito by custom verification modes (#87)


Other: 8

Fixed wrong javadoc for AdditionalAnswers (#56)
Added useful links to README.md (#58)
Deprecated timeout().never(), in line with timeout().atMost() (#14)
Verification with timout measures time more more accurately (#15)
New "then" method for BDD-style interaction testing (#38)
Enabled continuous integration with Travis CI and coverage tracking with coveralls (#18)
Coveralls coverage tracking tool allows Mockito source code preview (#62)
Improved behavior of EqualsWithDelta with regards to null handling (#21)





Btw, currently there is no label with space in the project, so it has to be tested if there will not be a problem with "new feature".



This is really, really nice. I'll try to merge this soon.



Will merge soon :)



It seems that some of the changes landed in master, but not all. Could you give an update @szczepiq on what is still required to be updated and merged?



@szpak Do you maybe know what the status of this pull request is? I can't seem to determine which changes have landed and which haven't.



@TimvdLippe AFAIR @szczepiq merged my commits, but later reverted/removed them due to some refactoring he was doing to the release notes mechanism. Looking at the reports, separation per label is not used currently. I see "others" generated only for two dates.



@szpak All right thanks for the explanation. Are you willing to update this PR accordingly so these changes are once again incorporated?



I may take a look how does it look in the current context, but unfortunately rather not within the incoming 4 weeks. Feel free to take this topic if you would like to have it earlier.



Extracted #478 for now. Therefore closing this pull request.

