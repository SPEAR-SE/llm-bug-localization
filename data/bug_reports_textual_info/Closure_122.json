{
    "id": 1037,
    "status": "WontFix",
    "summary": "Inconsistent handling of non-JSDoc comments",
    "labels": [
        "Type-Defect",
        "Priority-Medium"
    ],
    "stars": 0,
    "commentCount": 3,
    "comments": [
        {
            "id": 0,
            "commenterId": -1650257225566936398,
            "content": "<b>What steps will reproduce the problem?</b>\n<b>1.</b>\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nWhen given:\r\n\r\n    /* @preserve Foo License */\r\n    alert(&quot;foo&quot;);\r\n\r\nIt spits out:\r\n\r\n    stdin:1: WARNING - Parse error. Non-JSDoc comment has annotations. Did you mean to start it with '/**'?\r\n    /* @license Foo License */\r\n    ^\r\n    \r\n    0 error(s), 1 warning(s)\r\n    alert(&quot;foo&quot;);\r\n\r\nIf I take the suggestion and change the opening of the comment to '/**', everything is great.  However, if I change it to '/*!', the warning goes away, but it doesn't preserve the comment either.\r\n\r\nI expect it to print the above warning, or preserve the comment.  That it does neither when starting with &quot;/*!&quot; (and every other character I tried) is confusing.\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n\r\nTested with my compilation of the &quot;v20130603&quot; tag:\r\n\r\n    Closure Compiler (http://code.google.com/closure/compiler)\r\n    Version: v20130603\r\n    Built on: 2013/07/07 15:04\r\n\r\nAnd with the provided binary:\r\n\r\n    Closure Compiler (http://code.google.com/closure/compiler)\r\n    Version: v20130411-90-g4e19b4e\r\n    Built on: 2013/06/03 12:07\r\n\r\nI'm on Parabola GNU/Linux-libre with Java:\r\n\r\n    java version &quot;1.7.0_40&quot;\r\n    OpenJDK Runtime Environment (IcedTea 2.4.0) (ArchLinux build 7.u40_2.4.0-1-i686)\r\n    OpenJDK Server VM (build 24.0-b40, mixed mode)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n",
            "timestamp": 1373239101,
            "attachments": []
        },
        {
            "id": 1,
            "commenterId": 4865484112040790759,
            "content": "Thanks for the report. Hopefully I'll fix this today.",
            "timestamp": 1373306747,
            "attachments": []
        },
        {
            "id": 2,
            "commenterId": 4865484112040790759,
            "content": "I submitted a change today that improved detection of suspicious block comments. See\r\n\r\nhttps://code.google.com/p/closure-compiler/source/detail?r=a8a456b183c9600658bcb0c72091bae1a30a4fda\r\n\r\nHowever, it doesn't fix the current issue. Basically, we want to warn for comments which contain annotations that would be checked inside a jsdoc. For example, if one writes\r\n/**\r\n * The first @param of this function is a number\r\n */\r\nthe compiler ignores the @param because it's not the first thing in that line of text. The suspicious-comment check shouldn't warn about such cases, so if there are non blank characters between /* and the tag, we don't warn. I didn't think it was worth it to special-case the check just for the case when the comment starts with /*!\r\n\r\nIn any case, thanks for the report! The new check found many suspicious comments, even though it doesn't fix the originally reported one.",
            "timestamp": 1373673090,
            "attachments": []
        }
    ]
}