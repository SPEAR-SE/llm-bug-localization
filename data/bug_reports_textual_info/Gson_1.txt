

Unfortunately, shortly after the Gson 1.2 release, I found a bug in the
TypeVariable support.  Basically, the following class can not be serialized
or deserialized using Gson:

public class Foo<T> {
  private final T someField;

  public Foo(T value) {
    this.someField = value;
  }

  public boolean equals(Object o) {
    if (!(o instanceof Foo)) {
      return false;
    } else {
        return someField.equals(((Foo)o).someField);
    }
  }
}

public class Bar extends Foo<Integer> {
  public Bar(Integer i) {
    super(i);
  }
}

Gson gson = new Gson();
Bar bar1 = new Bar(1);
String json = gson.toJson(bar1);   // Fails
Bar bar2 = gson.fromJson("{\"someField\":1", Bar.class);    // Fails

assertEquals(bar1, bar2);


Original issue reported on code.google.com by joel.leitch@gmail.com on 29 Aug 2008 at 11:53

Merged into: No support for fields whose types are type parametersÂ #168




Original comment by joel.leitch@gmail.com on 1 Dec 2008 at 1:28

Added labels: Type-Enhancement
Removed labels: Type-Defect




Why it is marked as enhancement while it seems to be the bug?

Original comment by chere...@gmail.com on 1 Apr 2009 at 5:19



Deferred to a future release

Original comment by inder123 on 1 Oct 2009 at 4:04

Added labels: Type-Defect, Milestone-Release1.5
Removed labels: Type-Enhancement




FYI: Guice's TypeLiteral can do full type resolution. This could be adapted for 
use internally in GSON.
  http://google-guice.googlecode.com/svn/trunk/javadoc/com/google/inject/TypeLiteral.html

Original comment by jessewil...@google.com on 20 Aug 2010 at 5:10



Here is a proposed patch for the issue (and associated unit test).

The modification was simply to add a recursive search on all parents super 
classes until the declairing class was found. Then do it again util we end up 
with something that is not a "TypeVariable<?>" (This is done so complex 
hierarchies can work).

Can someone with commit privilege review and approve/reject ?

Thank you.

Original comment by alexandr...@gmail.com on 13 Oct 2010 at 3:14
Attachments:

Issue40-proposedFix.patch




Thanks for the patch. Adding it as part of the Gson 1.6 release which is set to 
release this coming Friday.

Original comment by joel.leitch@gmail.com on 2 Nov 2010 at 3:31



Original comment by inder123 on 3 Nov 2010 at 12:01

Removed labels: Milestone-Release1.5




We're planning on fixing this in 1.7.

Original comment by limpbizkit on 3 Nov 2010 at 3:20

Changed state: Duplicate


